<?php

use Drupal\Component\Utility\Crypt;
use Drupal\Component\Utility\Random;

/**
 * Implements hook_install_tasks().
 */
function graphql_example_install_tasks(&$install_state) {
  $tasks = [
    // Users tasks.
    'graphql_example_tasks_users' => [],
    // Create consumers and keys.
    'graphql_example_tasks_simple_oauth' => [],
    // Import Content tasks.
    'graphql_example_tasks_content' => [
      'type' => 'batch',
    ],
  ];

  return $tasks;
}

/**
 * Callback function to add Users.
 *
 * @see graphql_example_tasks_users()
 */
function graphql_example_tasks_users() {
  $userStorage = \Drupal::entityTypeManager()->getStorage('user');
  $admin = $userStorage->load(1);
  $admin->name = 'admin';
  $admin->mail = 'admin@example.org';
  $admin->roles[] = 'administrator';
  $admin->save();

  $editor = $userStorage->create([
    'name'     => 'editor',
    'pass' => 'editor',
    'mail'      => 'editor@example.org',
    'status' => 1,
    'roles' => ['content_editor'],
  ]);
  $editor->save();

  node_access_rebuild();
}
/**
 * Callback function to generate Consumers.
 *
 * @see graphql_example_tasks_simple_oauth()
 */
function graphql_example_tasks_simple_oauth() {
  $random = new Random();
  $consumerStorage = \Drupal::entityTypeManager()->getStorage('consumer');

  $previewerClientId = Crypt::randomBytesBase64();
  $previewerClientSecret = $random->word(8);
  $consumerStorage->create([
    'client_id' => $previewerClientId,
    'client_secret ' => $previewerClientSecret,
    'label' => 'Previewer',
    'user_id' => 2,
    'third_party' => TRUE,
    'is_default' => FALSE,
    'roles' => ['previewer'],
  ])->save();

  $viewerClientId = Crypt::randomBytesBase64();
  $viewerClientSecret = $random->word(8);
  $consumerStorage->create([
    'client_id' => $viewerClientId,
    'client_secret ' => $viewerClientSecret,
    'label' => 'Viewer',
    'user_id' => 2,
    'third_party' => TRUE,
    'is_default' => FALSE,
    'roles' => ['viewer'],
  ])->save();

  \Drupal::service('simple_oauth.key.generator')->generateKeys('../');

  echo PHP_EOL;
  echo " Consumers created successfully. Please save the following credentials." . PHP_EOL;

  echo " --- Previewer ---" . PHP_EOL;
  echo " DRUPAL_CLIENT_ID=$previewerClientId" . PHP_EOL;
  echo " DRUPAL_CLIENT_SECRET=$previewerClientSecret" . PHP_EOL;

  echo " --- Viewer ---" . PHP_EOL;
  echo " DRUPAL_CLIENT_ID=$viewerClientId" . PHP_EOL;
  echo " DRUPAL_CLIENT_SECRET=$viewerClientSecret" . PHP_EOL;

  echo PHP_EOL;
}

/**
 * Callback function to import content.
 *
 * @see graphql_example_tasks_content()
 */
function graphql_example_tasks_content() {
  // Import content from the zip file.
  $contentFile = \Drupal::service('extension.list.profile')->getPath('graphql_example') . '/assets/content.zip';
  \Drupal::service('single_content_sync.importer')->importFromZip($contentFile);

  $batch = &batch_get();
  $batch['progressive'] = FALSE;

  batch_process();

  if (is_callable('drush_backend_batch_process')) {
    drush_backend_batch_process();
  }

  // Assign the avatar to the editor user.
  $media = reset(\Drupal::entityTypeManager()
  ->getStorage('media')
  ->loadByProperties(
    [
      'field_media_image.entity:file.filename' => 'doc-tahedroid-avatar.png',
    ]
  ));

  $userStorage = \Drupal::entityTypeManager()->getStorage('user');
  $editor = reset($userStorage->loadByProperties(['name' => 'editor']));
  $editor->field_picture->entity = $media;
  $editor->save();
}
